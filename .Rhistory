###getting cluster number for each of the KNN for individual cell
KNN = KNN(adjpva,index,clusters)
##Two level shrinkage of distance matrix based on clusters and KNN
class = class1(clusters,KNN)
distance = distance(dist,class,clusters)
##Computation of MST on shrinked distance matrix
corr_mst = minimum_spanning_tree(distance)
UniPath::mst.plot.mod(corr_mst, vertex.color = color$milestone_id,mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
UniPath::mst.plot.mod(corr_mst, vertex.color = color$color,mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
UniPath::mst.plot.mod(corr_mst, vertex.color = color$color,mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
vertex_color= unique(color$color)
cell_labels = as.data.frame(color$milestone_id)
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
legend("topright", legend = sort(unique(cell_labels[,1])) , col = vertex_color,pch=20, box.lty=0,cex=1,pt.cex=1.5,horiz=F)
library(randomcoloR)
n = distinctColorPalette(9)
vertex_color = n
vertex_color[cell_labels[,1]]
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
legend("topright", legend = sort(unique(cell_labels[,1])) , col = vertex_color,pch=20, box.lty=0,cex=1,pt.cex=1.5,horiz=F)
library(randomcoloR)
n = distinctColorPalette(9)
vertex_color = n
vertex_color[cell_labels[,1]]
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
legend("topright", legend = sort(unique(cell_labels[,1])) , col = vertex_color,pch=20, box.lty=0,cex=1,pt.cex=1.5,horiz=F)
unique(cell_labels)
unique(cell_labels[,1])
`developing-dendritic-cells_schlitzer` <- readRDS("C:/Users/Smriti/Downloads/developing-dendritic-cells_schlitzer.rds")
View(`developing-dendritic-cells_schlitzer`)
`developing-dendritic-cells_schlitzer`[["grouping"]]
View(`developing-dendritic-cells_schlitzer`)
`developing-dendritic-cells_schlitzer`[["expression"]]
setwd("C:\\Users\\Smriti\\Desktop\\Dyngen")
library(UniPath)
data("mouse_null_model")
data("c2.cp.v6.1.symbols")
color = read.table("developing-dendritic-cells_schlitzer_colors.csv",sep=",",header=T,row.names = 1)
data = as.matrix(t(`developing-dendritic-cells_schlitzer`[["expression"]]))
Pval = binorm(mouse_null_data)
combp_ref = combine(c2.cp.v6.1.symbols,mouse_null_data,rownames(mouse_null_data),Pval,thr=2)
Pval1 = binorm(data)
combp = combine(c2.cp.v6.1.symbols,data,rownames(data),Pval1,thr=2)
scores = adjust(combp,combp_ref)
adjpva = scores$adjpvalog
distclust = dist_clust(adjpva,3)
dist = distclust$distance
clusters = distclust$clusters
##Specifying number of top k nearest neighbor
index = index(adjpva,5)
###getting cluster number for each of the KNN for individual cell
KNN = KNN(adjpva,index,clusters)
##Two level shrinkage of distance matrix based on clusters and KNN
class = class1(clusters,KNN)
distance = distance(dist,class,clusters)
##Computation of MST on shrinked distance matrix
corr_mst = minimum_spanning_tree(distance)
#vertex_color= unique(color$color)
cell_labels = as.data.frame(color$milestone_id)
library(randomcoloR)
unique(color$milestone_id)
n = distinctColorPalette(3)
vertex_color = n
vertex_color[cell_labels[,1]]
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
UniPath::mst.plot.mod(corr_mst, vertex.color = color$color,mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
UniPath::mst.plot.mod(corr_mst, vertex.color = color$milestone_id,mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
setwd("C:\\Users\\Smriti\\Desktop\\Dyngen")
library(UniPath)
data("mouse_null_model")
data("c2.cp.v6.1.symbols")
color = read.table("developing-dendritic-cells_schlitzer_colors.csv",sep=",",header=T,row.names = 1)
data = as.matrix(t(`developing-dendritic-cells_schlitzer`[["expression"]]))
Pval = binorm(mouse_null_data)
combp_ref = combine(c2.cp.v6.1.symbols,mouse_null_data,rownames(mouse_null_data),Pval,thr=2)
Pval1 = binorm(data)
combp = combine(c2.cp.v6.1.symbols,data,rownames(data),Pval1,thr=2)
scores = adjust(combp,combp_ref)
adjpva = scores$adjpvalog
distclust = dist_clust(adjpva,3)
dist = distclust$distance
clusters = distclust$clusters
##Specifying number of top k nearest neighbor
index = index(adjpva,5)
###getting cluster number for each of the KNN for individual cell
KNN = KNN(adjpva,index,clusters)
##Two level shrinkage of distance matrix based on clusters and KNN
class = class1(clusters,KNN)
distance = distance(dist,class,clusters)
##Computation of MST on shrinked distance matrix
corr_mst = minimum_spanning_tree(distance)
#vertex_color= unique(color$color)
cell_labels = as.data.frame(color$milestone_id)
#vertex_color = c("orange","Red","green","blue","yellow")
#cell_labels  = data.frame(c(rep("embryonic day 3",75),rep("embryonic day 4",154),rep("embryonic day 5",304),rep("embryonic day 6",345),rep("embryonic day 7",411)))
library(randomcoloR)
n = distinctColorPalette(3)
vertex_color = n
vertex_color[cell_labels[,1]]
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
legend("topright", legend = sort(unique(cell_labels[,1])) , col = vertex_color,pch=20, box.lty=0,cex=1,pt.cex=1.5,horiz=F)
`developing-dendritic-cells_schlitzer` <- readRDS("C:/Users/Smriti/Downloads/developing-dendritic-cells_schlitzer.rds")
setwd("C:\\Users\\Smriti\\Desktop\\Dyngen")
library(UniPath)
data("mouse_null_model")
data("c2.cp.v6.1.symbols")
color = read.table("developing-dendritic-cells_schlitzer_colors.csv",sep=",",header=T,row.names = 1)
data = as.matrix(t(`developing-dendritic-cells_schlitzer`[["expression"]]))
Pval = binorm(mouse_null_data)
combp_ref = combine(c2.cp.v6.1.symbols,mouse_null_data,rownames(mouse_null_data),Pval,thr=2)
Pval1 = binorm(data)
combp = combine(c2.cp.v6.1.symbols,data,rownames(data),Pval1,thr=2)
scores = adjust(combp,combp_ref)
adjpva = scores$adjpvalog
distclust = dist_clust(adjpva,3)
dist = distclust$distance
clusters = distclust$clusters
##Specifying number of top k nearest neighbor
index = index(adjpva,5)
###getting cluster number for each of the KNN for individual cell
KNN = KNN(adjpva,index,clusters)
##Two level shrinkage of distance matrix based on clusters and KNN
class = class1(clusters,KNN)
distance = distance(dist,class,clusters)
##Computation of MST on shrinked distance matrix
corr_mst = minimum_spanning_tree(distance)
#vertex_color= unique(color$color)
cell_labels = as.data.frame(color$milestone_id)
#vertex_color = c("orange","Red","green","blue","yellow")
#cell_labels  = data.frame(c(rep("embryonic day 3",75),rep("embryonic day 4",154),rep("embryonic day 5",304),rep("embryonic day 6",345),rep("embryonic day 7",411)))
library(randomcoloR)
n = distinctColorPalette(3)
vertex_color = n
vertex_color[cell_labels[,1]]
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
legend("topright", legend = sort(unique(cell_labels[,1])) , col = vertex_color,pch=20, box.lty=0,cex=1,pt.cex=1.5,horiz=F)
100 <- readRDS("C:/Users/Smriti/Downloads/100.rds")
d = readRDS("C:\Users\Smriti\Downloads\100.rds")
d = readRDS("C:\\Users\\Smriti\\Downloads\\100.rds")
data = as.matrix(t(d[["expression"]]))
setwd("C:\\Users\\Smriti\\Desktop\\Dyngen")
library(UniPath)
color = read.table("100.csv",sep=",",header=T,row.names = 1)
d = readRDS("C:\\Users\\Smriti\\Downloads\\100.rds")
data = as.matrix(t(d[["expression"]]))
unique(color$milestone_id)
View(color)
distclust = dist_clust(data,2)
dist = distclust$distance
clusters = distclust$clusters
##Specifying number of top k nearest neighbor
index = index(data,5)
###getting cluster number for each of the KNN for individual cell
KNN = KNN(data,index,clusters)
##Two level shrinkage of distance matrix based on clusters and KNN
class = class1(clusters,KNN)
distance = distance(dist,class,clusters)
##Computation of MST on shrinked distance matrix
corr_mst = minimum_spanning_tree(distance)
table(color$milestone_id)
cell_labels  = data.frame(c(rep("1",251),rep("2",305)))
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
vertex_color = c("red","green")
cell_labels  = data.frame(c(rep("1",251),rep("2",305)))
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
legend("topright", legend = sort(unique(cell_labels[,1])) , col = vertex_color,pch=20, box.lty=0,cex=1,pt.cex=1.5,horiz=F)
setwd("C:\\Users\\Smriti\\Desktop\\Dyngen")
library(UniPath)
color = read.table("100.csv",sep=",",header=T,row.names = 1)
d = readRDS("C:\\Users\\Smriti\\Downloads\\100.rds")
data = as.matrix(t(d[["expression"]]))
distclust = dist_clust(data,2)
dist = distclust$distance
clusters = distclust$clusters
##Specifying number of top k nearest neighbor
index = index(data,2)
###getting cluster number for each of the KNN for individual cell
KNN = KNN(data,index,clusters)
##Two level shrinkage of distance matrix based on clusters and KNN
class = class1(clusters,KNN)
distance = distance(dist,class,clusters)
##Computation of MST on shrinked distance matrix
corr_mst = minimum_spanning_tree(distance)
vertex_color = c("red","green")
cell_labels  = data.frame(c(rep("1",251),rep("2",305)))
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
legend("topright", legend = sort(unique(cell_labels[,1])) , col = vertex_color,pch=20, box.lty=0,cex=1,pt.cex=1.5,horiz=F)
##Specifying number of top k nearest neighbor
index = index(data,4)
###getting cluster number for each of the KNN for individual cell
KNN = KNN(data,index,clusters)
##Two level shrinkage of distance matrix based on clusters and KNN
class = class1(clusters,KNN)
distance = distance(dist,class,clusters)
##Computation of MST on shrinked distance matrix
corr_mst = minimum_spanning_tree(distance)
vertex_color = c("red","green")
cell_labels  = data.frame(c(rep("1",251),rep("2",305)))
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
legend("topright", legend = sort(unique(cell_labels[,1])) , col = vertex_color,pch=20, box.lty=0,cex=1,pt.cex=1.5,horiz=F)
##Specifying number of top k nearest neighbor
index = index(data,5)
###getting cluster number for each of the KNN for individual cell
KNN = KNN(data,index,clusters)
##Two level shrinkage of distance matrix based on clusters and KNN
class = class1(clusters,KNN)
distance = distance(dist,class,clusters)
##Computation of MST on shrinked distance matrix
corr_mst = minimum_spanning_tree(distance)
vertex_color = c("red","green")
cell_labels  = data.frame(c(rep("1",251),rep("2",305)))
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
legend("topright", legend = sort(unique(cell_labels[,1])) , col = vertex_color,pch=20, box.lty=0,cex=1,pt.cex=1.5,horiz=F)
setwd("C:\\Users\\Smriti\\Desktop\\Dyngen")
library(UniPath)
color = read.table("61.csv",sep=",",header=T,row.names = 1)
d = readRDS("C:\\Users\\Smriti\\Downloads\\61.rds")
data = as.matrix(t(d[["expression"]]))
unique(color$milestone_id)
distclust = dist_clust(data,4)
dist = distclust$distance
clusters = distclust$clusters
##Specifying number of top k nearest neighbor
index = index(data,5)
###getting cluster number for each of the KNN for individual cell
KNN = KNN(data,index,clusters)
##Two level shrinkage of distance matrix based on clusters and KNN
class = class1(clusters,KNN)
distance = distance(dist,class,clusters)
##Computation of MST on shrinked distance matrix
corr_mst = minimum_spanning_tree(distance)
cell_labels = as.data.frame(color$milestone_id)
library(randomcoloR)
n = distinctColorPalette(3)
vertex_color = n
vertex_color[cell_labels[,1]]
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
legend("topright", legend = sort(unique(cell_labels[,1])) , col = vertex_color,pch=20, box.lty=0,cex=1,pt.cex=1.5,horiz=F)
library(randomcoloR)
n = distinctColorPalette(unique(color$milestone_id))
library(randomcoloR)
n = distinctColorPalette(unique(color$milestone_id))
setwd("C:\\Users\\Smriti\\Desktop\\Dyngen")
library(UniPath)
color = read.table("61.csv",sep=",",header=T,row.names = 1)
d = readRDS("C:\\Users\\Smriti\\Downloads\\61.rds")
data = as.matrix(t(d[["expression"]]))
distclust = dist_clust(data,4)
dist = distclust$distance
clusters = distclust$clusters
##Specifying number of top k nearest neighbor
index = index(data,5)
###getting cluster number for each of the KNN for individual cell
KNN = KNN(data,index,clusters)
##Two level shrinkage of distance matrix based on clusters and KNN
class = class1(clusters,KNN)
distance = distance(dist,class,clusters)
##Computation of MST on shrinked distance matrix
corr_mst = minimum_spanning_tree(distance)
cell_labels = as.data.frame(color$milestone_id)
View(cell_labels)
library(randomcoloR)
n = distinctColorPalette(unique(color$milestone_id))
unique(color$milestone_id))
unique(color$milestone_id)
n = distinctColorPalette(4)
vertex_color = n
vertex_color[cell_labels[,1]]
n = distinctColorPalette(4)
vertex_color = n
View(cell_labels)
vertex_color[cell_labels[,1]]
View(color)
UniPath::mst.plot.mod(corr_mst, vertex.color = color$milestone_id,mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
UniPath::mst.plot.mod(corr_mst, vertex.color = color$color,mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
UniPath::mst.plot.mod(corr_mst, vertex.color = color$milestone_id,mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
n = distinctColorPalette(4)
vertex_color = n
vertex_color
vertex_color[cell_labels[,1]]
unique(color$milestone_id)
table(unique(color$milestone_id))
table((color$milestone_id))
class(cell_labels$`color$milestone_id`)
cell_labels$`color$milestone_id` = as.factor(cell_labels$`color$milestone_id`)
library(randomcoloR)
n = distinctColorPalette(4)
vertex_color = n
vertex_color[cell_labels[,1]]
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
legend("topright", legend = sort(unique(cell_labels[,1])) , col = vertex_color,pch=20, box.lty=0,cex=1,pt.cex=1.5,horiz=F)
library(randomcoloR)
n = distinctColorPalette(4)
vertex_color = n
vertex_color[cell_labels[,1]]
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
legend("topright", legend = sort(unique(cell_labels[,1])) , col = vertex_color,pch=20, box.lty=0,cex=1,pt.cex=1.5,horiz=F)
setwd("C:\\Users\\Smriti\\Desktop\\Dyngen")
library(UniPath)
color = read.table("bifurcating_9_colors.csv",sep=",",header=T,row.names = 1)
d = readRDS("C:\\Users\\Smriti\\Downloads\\bifurcating_9.rds")
data = as.matrix(t(d[["expression"]]))
unique(color$milestone_id)
distclust = dist_clust(data,4)
dist = distclust$distance
clusters = distclust$clusters
##Specifying number of top k nearest neighbor
index = index(data,5)
###getting cluster number for each of the KNN for individual cell
KNN = KNN(data,index,clusters)
##Two level shrinkage of distance matrix based on clusters and KNN
class = class1(clusters,KNN)
distance = distance(dist,class,clusters)
##Computation of MST on shrinked distance matrix
corr_mst = minimum_spanning_tree(distance)
cell_labels = as.data.frame(color$milestone_id)
cell_labels$`color$milestone_id` = as.factor(cell_labels$`color$milestone_id`)
library(randomcoloR)
n = distinctColorPalette(4)
vertex_color = n
vertex_color[cell_labels[,1]]
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
legend("topright", legend = sort(unique(cell_labels[,1])) , col = vertex_color,pch=20, box.lty=0,cex=1,pt.cex=1.5,horiz=F)
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 2.5,e.size=0.005,mst.e.size = 0.005)
n = distinctColorPalette(4)
vertex_color = n
vertex_color[cell_labels[,1]]
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 2.5,e.size=0.005,mst.e.size = 0.005)
legend("topright", legend = sort(unique(cell_labels[,1])) , col = vertex_color,pch=20, box.lty=0,cex=1,pt.cex=1.5,horiz=F)
n = distinctColorPalette(4)
vertex_color = n
vertex_color[cell_labels[,1]]
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 2.5,e.size=0.005,mst.e.size = 0.005)
legend("topright", legend = sort(unique(cell_labels[,1])) , col = vertex_color,pch=20, box.lty=0,cex=1,pt.cex=1.5,horiz=F)
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 2.5,e.size=0.005,mst.e.size = 0.005)
legend("topright", legend = sort(unique(cell_labels[,1])) , col = vertex_color,pch=20, box.lty=0,cex=1,pt.cex=1.5,horiz=F)
UniPath::mst.plot.mod(corr_mst, vertex.color = color$milestone_id,mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
setwd("C:\\Users\\Smriti\\Desktop\\Dyngen")
library(UniPath)
color = read.table("linear_8_color.csv",sep=",",header=T,row.names = 1)
d = readRDS("C:\\Users\\Smriti\\Downloads\\linear_8.rds")
data = as.matrix(t(d[["expression"]]))
unique(color$milestone_id)
distclust = dist_clust(data,2)
dist = distclust$distance
clusters = distclust$clusters
##Specifying number of top k nearest neighbor
index = index(data,5)
###getting cluster number for each of the KNN for individual cell
KNN = KNN(data,index,clusters)
##Two level shrinkage of distance matrix based on clusters and KNN
class = class1(clusters,KNN)
distance = distance(dist,class,clusters)
##Computation of MST on shrinked distance matrix
corr_mst = minimum_spanning_tree(distance)
cell_labels = as.data.frame(color$milestone_id)
cell_labels$`color$milestone_id` = as.factor(cell_labels$`color$milestone_id`)
library(randomcoloR)
n = distinctColorPalette(4)
vertex_color = n
vertex_color[cell_labels[,1]]
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 2.5,e.size=0.005,mst.e.size = 0.005)
legend("topright", legend = sort(unique(cell_labels[,1])) , col = vertex_color,pch=20, box.lty=0,cex=1,pt.cex=1.5,horiz=F)
n = distinctColorPalette(2)
vertex_color = n
vertex_color[cell_labels[,1]]
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 2.5,e.size=0.005,mst.e.size = 0.005)
legend("topright", legend = sort(unique(cell_labels[,1])) , col = vertex_color,pch=20, box.lty=0,cex=1,pt.cex=1.5,horiz=F)
UniPath::mst.plot.mod(corr_mst, vertex.color = color$milestone_id,mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 2.5,e.size=0.005,mst.e.size = 0.005)
legend("topright", legend = sort(unique(cell_labels[,1])) , col = vertex_color,pch=20, box.lty=0,cex=1,pt.cex=1.5,horiz=F)
library(UniPath)
color = read.table("looping_6_color.csv",sep=",",header=T,row.names = 1)
d = readRDS("C:\\Users\\Smriti\\Downloads\\looping_6.rds")
data = as.matrix(t(d[["expression"]]))
unique(color$milestone_id)
distclust = dist_clust(data,7)
dist = distclust$distance
clusters = distclust$clusters
##Specifying number of top k nearest neighbor
index = index(data,5)
###getting cluster number for each of the KNN for individual cell
KNN = KNN(data,index,clusters)
##Two level shrinkage of distance matrix based on clusters and KNN
class = class1(clusters,KNN)
distance = distance(dist,class,clusters)
##Computation of MST on shrinked distance matrix
corr_mst = minimum_spanning_tree(distance)
cell_labels = as.data.frame(color$milestone_id)
cell_labels$`color$milestone_id` = as.factor(cell_labels$`color$milestone_id`)
library(randomcoloR)
n = distinctColorPalette(2)
vertex_color = n
vertex_color[cell_labels[,1]]
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 2.5,e.size=0.005,mst.e.size = 0.005)
legend("topright", legend = sort(unique(cell_labels[,1])) , col = vertex_color,pch=20, box.lty=0,cex=1,pt.cex=1.5,horiz=F)
n = distinctColorPalette(7)
vertex_color = n
vertex_color[cell_labels[,1]]
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 2.5,e.size=0.005,mst.e.size = 0.005)
legend("topright", legend = sort(unique(cell_labels[,1])) , col = vertex_color,pch=20, box.lty=0,cex=1,pt.cex=1.5,horiz=F)
unique(color$milestone_id)
n = distinctColorPalette(7)
vertex_color = n
vertex_color[cell_labels[,1]]
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 2.5,e.size=0.005,mst.e.size = 0.005)
legend("topright", legend = sort(unique(cell_labels[,1])) , col = vertex_color,pch=20, box.lty=0,cex=1,pt.cex=1.5,horiz=F)
n = distinctColorPalette(7)
vertex_color = n
vertex_color[cell_labels[,1]]
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 2.5,e.size=0.005,mst.e.size = 0.005)
legend("topright", legend = sort(unique(cell_labels[,1])) , col = vertex_color,pch=20, box.lty=0,cex=1,pt.cex=1.5,horiz=F)
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 2.5,e.size=0.005,mst.e.size = 0.005)
legend("topright", legend = sort(unique(cell_labels[,1])) , col = vertex_color,pch=20, box.lty=0,cex=1,pt.cex=1.5,horiz=F)
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]]
)
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function= NULL
,v.size = 2.5,e.size=0.005,mst.e.size = 0.005)
`human-embryos_petropoulos` <- readRDS("C:/Users/Smriti/Downloads/human-embryos_petropoulos.rds")
version
library(UniPath)
library(UniPath)
setwd("G:\\Single_cell_epigenome")
data("human_markers")
globalaccess = read.table("access_77_no_unique.csv",sep=",")[,1]
scores = runGO(human_markers,"background","count.csv",method=1,"globalaccess","G:\\Single_cell_epigenome\\foreground.txt",promoters = FALSE,dist=1000000,threshold=1.25)
head(scores$binomial)
library(UniPath)
library(UniPath)
library(UniPath)
##Load all data files
data("mouse_null_model")
data("c2.cp.v6.1.symbols")
data("GSE52583_expression_data")
##Converting mouse null data into p-values
Pval = binorm(mouse_null_data)
##Converting gene expression data into p-values
Pval1 = binorm(expression_data)
##Combining of p-values for null model data matrix
combp_ref = combine(c2.cp.v6.1.symbols,mouse_null_data,rownames(mouse_null_data),Pval,thr=2)
##Combining of p-values for gene expression data matrix
combp = combine(c2.cp.v6.1.symbols,expression_data,rownames(expression_data),Pval1,thr=2)
scores = adjust(combp,combp_ref)
##Performing hierarchal clustering on pathway score matrix
##User has to specify number of classes
distclust = dist_clust(scores$adjpvalog,4)
dist = distclust$distance
clusters = distclust$clusters
##Specifying number of top k nearest neighbor
index = index(scores$adjpvalog,5)
###getting cluster number for each of the KNN for individual cell
KNN = KNN(scores$adjpvalog,index,clusters)
##Two level shrinkage of distance matrix based on clusters and KNN
class = class1(clusters,KNN)
distance = distance(dist,class,clusters)
##Computation of MST on shrinked distance matrix
corr_mst = minimum_spanning_tree(distance)
##Plotting of MST
vertex_color = c("red","green","blue","yellow")
cell_labels = data.frame(c(rep("E18.5",82),rep("E14.5",44),rep("Adult",46),rep("E16.5",23)))
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 2, e.size=0.005,mst.e.size = 0.005)
legend("topright", legend = sort(unique(cell_labels[,1])), col = vertex_color,pch=20, box.lty=0,cex=0.6,pt.cex=1.5,horiz=F)
library(UniPath)
data("GSE75748pathwayscores")
distclust = dist_clust(GSE75748pathwayscores,6)
dist = distclust$distance
clusters = distclust$clusters
index = index(GSE75748pathwayscores,4)
KNN = KNN(GSE75748pathwayscores,index,clusters)
class = class1(clusters,KNN)
distance = distance(dist,class,clusters)
corr_mst = minimum_spanning_tree(distance)
vertex_color = c("yellow","Red","green","blue","black","magenta")
cell_labels  = data.frame(c(rep("0h",92),rep("12h",102),rep("24h",66),rep("36h",172),rep("72h",138),rep("96h",188)))
set.seed(100)
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
legend("topright", legend = sort(unique(cell_labels[,1])) , col = vertex_color,pch=20, box.lty=0,cex=1,pt.cex=2,horiz=F)
setwd("G:\\GSE97930_VisualCortex_snDrop-seq_UMI_Count_Matrix_08")
library(AUCell)
library(GSEABase)
gene_data_1 <- read.table("occ23_umi_counts.csv",sep=",",stringsAsFactors=F,header=T)
expression_matrix = as.matrix(gene_data_1[,2:ncol(gene_data_1)])
gnames = as.matrix(gene_data_1[,1])
rownames(expression_matrix) = gnames
expression_matrix = as.matrix(expression_matrix[,1:ncol(expression_matrix)])
# Running AUCell
cells_rankings <- AUCell_buildRankings(expression_matrix,plotStats = T)
gene_list  <- getGmt("c2.cp.v6.1.symbols.gmt")
cells_AUC <- AUCell_calcAUC(gene_list, cells_rankings, aucMaxRank=nrow(cells_rankings)*.05, nCores=1)
scores = cells_AUC@assays@data$AUC
labels = sub('_.*$','', colnames(scores))
##Performing PCA
pca = prcomp(scores,scale=T,center=T)
###Using first 50 PCs as input to Rtsne
library(Rtsne)
rt = Rtsne(pca$rotation[,1:50],pca=F,max_iter=1000)
###Evaluation of clustering performance using dbscan based clustering
##Different eps valyues are used
## n corresponds to 0.5,1,1.5,2,3 and 5
library(UniPath)
setwd("C:\\Users\\Smriti\\Desktop\\dropClust_shiny-master")
library(Shiny)
library(shiny)
